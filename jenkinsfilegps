pipeline {
    agent any

    environment {
        PATH = "C:/Program Files/Docker/Docker/resources/bin:$PATH"
        DOCKER_CREDENTIALS_ID = 'docker-credentials-id'
        GIT_REPO_URL = 'https://github.com/spring-petclinic/spring-petclinic-microservices'
        GIT_BRANCH = 'main'
        DOCKER_REGISTRY = 'your-docker-registry'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: "${GIT_BRANCH}", url: "${GIT_REPO_URL}"
            }
        }

        stage('Diagnose') {
            steps {
                sh 'whoami'
                sh 'pwd'
                sh 'ls -l'
                sh 'echo $PATH'
                sh 'which mvn'
                sh './mvnw --version'
            }
        }

        stage('Build') {
            steps {
                script {
                    sh 'chmod +x mvnw' // Asegurar que mvnw tiene permisos de ejecuci√≥n
                    sh './mvnw clean install'
                }
            }
        }
    }

    post {
        failure {
            mail to: 'you@example.com',
                 subject: "Pipeline failed: ${currentBuild.fullDisplayName}",
                 body: "Something went wrong with the build. Please check the Jenkins job."
        }
    }
}
